// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGPA.Infrastructure.Data;

namespace SGPA.Infrastructure.Migrations
{
    [DbContext(typeof(SGPAContext))]
    [Migration("20181209223902_add-migration inicial")]
    partial class addmigrationinicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.HasKey("ClienteId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro");

                    b.Property<string>("CEP");

                    b.Property<int>("ClienteId");

                    b.Property<string>("Logradouro");

                    b.Property<string>("Numero");

                    b.HasKey("EnderecoId");

                    b.HasIndex("ClienteId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Grupo", b =>
                {
                    b.Property<int>("GrupoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.HasKey("GrupoId");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Passagem", b =>
                {
                    b.Property<int>("PassagemId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataEmissao");

                    b.Property<double>("Valor");

                    b.Property<int?>("VooId");

                    b.HasKey("PassagemId");

                    b.HasIndex("ClienteId");

                    b.HasIndex("VooId");

                    b.ToTable("Passagens");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.PassagemAerea", b =>
                {
                    b.Property<int>("PassagemAereaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GrupoId");

                    b.Property<int>("PassagemId");

                    b.HasKey("PassagemAereaId");

                    b.HasIndex("GrupoId");

                    b.HasIndex("PassagemId");

                    b.ToTable("PassagensAereas");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Voo", b =>
                {
                    b.Property<int>("VooId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao");

                    b.Property<int>("Numero");

                    b.HasKey("VooId");

                    b.ToTable("Voos");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SGPA.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithOne("Enderecos")
                        .HasForeignKey("SGPA.ApplicationCore.Entity.Endereco", "ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.Passagem", b =>
                {
                    b.HasOne("SGPA.ApplicationCore.Entity.Cliente", "Cliente")
                        .WithMany("Passagens")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGPA.ApplicationCore.Entity.Voo")
                        .WithMany("Passagens")
                        .HasForeignKey("VooId");
                });

            modelBuilder.Entity("SGPA.ApplicationCore.Entity.PassagemAerea", b =>
                {
                    b.HasOne("SGPA.ApplicationCore.Entity.Grupo", "Grupo")
                        .WithMany("PassagensAerea")
                        .HasForeignKey("GrupoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGPA.ApplicationCore.Entity.Passagem", "Passagem")
                        .WithMany("PassagensAerea")
                        .HasForeignKey("PassagemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
